{
  "Psoft": {
    "PsidePath": "C:\\tools\\psft_portable\\pside.exe",
    "ArgsManifestPath": "C:\\app\\cfg\\pside-args.json",
    "ReportDir": "C:\\app\\data\\reports",
    "ExportDir": "C:\\app\\data\\export",
    "BuildCfgPath": "C:\\app\\cfg\\ptbld.cfg",
    "SqlPlusPath": "C:\\OracleClient\\sqlplus.exe"
  }, 
  "StepChecks": {
    "TimeoutMs": 1200000,
    "ProbeMs": 20000,
    "PollMs": 5000,
    "ByStep": {
      "CopyProject": {
        "dbRole": "source",
        "Sql": "SELECT CASE WHEN EXISTS ( SELECT 1 FROM PSPROJECTMSG a WHERE a.PROJECTNAME = UPPER('{Project}') AND a.MESSAGE_PARM2 = 'Copy' AND TO_TIMESTAMP(a.MESSAGE_PARM3 DEFAULT NULL ON CONVERSION ERROR, 'YYYY-MM-DD-HH24.MI.SS') > SYSTIMESTAMP - NUMTODSINTERVAL(300, 'SECOND') ) THEN 'PSFTAPI_READY' ELSE 'PSFTAPI_WAIT' END AS rc FROM dual;"
      },
      "Compare": {
        "dbRole": "source",
        "sql": "SELECT CASE WHEN EXISTS ( SELECT 1 FROM PSCOMPSESSION a  WHERE a.PROJECTNAME = UPPER('{Project}')  AND a.PTSESSIONID IN ( SELECT PTSESSIONID FROM  PSCOMPOBJDIFF a  )   AND a.RUNDTTM   > (SYSDATE - INTERVAL '300' SECOND)) THEN 'PSFTAPI_READY' ELSE 'PSFTAPI_WAIT'  END AS rc FROM dual;"
      },
      "Build": {
        "dbRole": "target",
        "sql": "WITH proj_tabs AS (SELECT DISTINCT 'PS_' || UPPER(a.OBJECTVALUE1) AS name FROM PSPROJECTITEM a WHERE a.OBJECTTYPE IN (0) AND a.PROJECTNAME = UPPER('{Project}')), existence AS (SELECT (SELECT COUNT(*) FROM proj_tabs) AS proj_cnt, (SELECT COUNT(*) FROM proj_tabs t WHERE EXISTS (SELECT 1 FROM ALL_TABLES at WHERE at.TABLE_NAME = t.name) OR EXISTS (SELECT 1 FROM ALL_VIEWS av WHERE av.VIEW_NAME = t.name)) AS exist_cnt FROM dual) SELECT CASE WHEN proj_cnt = 0 THEN 'PSFTAPI_READY' WHEN exist_cnt = proj_cnt THEN 'PSFTAPI_READY' ELSE 'PSFTAPI_WAIT' END AS rc FROM existence ;"
      },
      "EmptyContainer": {
        "dbRole": "target",
        "sql": "select case when exists (select 1 from PSPROJECTDEFN  a where a.PROJECTNAME = upper('{Project}')) THEN 'PSFTAPI_READY' ELSE 'PSFTAPI_WAIT'  END AS rc FROM dual;"
      }
    }
  }
}
